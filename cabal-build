#!/bin/sh

# A cabal-build wrapper for use by 0compile. The setup is:
# $SRCDIR:   A read-only unpacked directory containing the source code
# $BUILDDIR: A writeable temp dir
# $DESTDIR:  A writeable destination dir which will become the published artifact.
#            It is CRITICAL that no files in here reference $DESTDIR, as it must
#            be relocatable.
#
# The process should *not* touch (or even read) ~/.cabal/*

set -eux
cd "$SRCDIR"

# use a throwaway cabal dir
export CABAL_ROOT="$BUILDDIR/_cabal"
mkdir -p "$CABAL_ROOT"
export CABAL_CONFIG="$CABAL_ROOT/config"
cat > "$CABAL_CONFIG" <<EOF
local-repo: $CABAL_ROOT/packages
world-file: $CABAL_ROOT/world
build-summary: $CABAL_ROOT/build.log
package-db: $CABAL_ROOT/pkg-db
EOF
ghc-pkg init "$CABAL_ROOT/pkg-db"

# construct a cabal package repo just for this build:
python -m cabal_repo "$CABAL_ROOT/packages"

export HOME="$BUILDDIR/fake_homedir" # make sure cabal doesn't mess with our home dir
cabal install --one-shot -v --builddir="$BUILDDIR" --prefix="$DISTDIR" --libsubdir='' "$@"

set +x
if p -d "$HOME"; then
	echo "WARNING: $HOME was populated! This shouldn't happen"
fi
